# pr_01.py
# Description:
#   - if in season, display the score of the previous game and when it was for a team
#   - if in season, display the time and date of the next game for a team
#   - if in season, display the ranking of a team's division, wins, losses, and games back
#   - if out of season, display number of days until opening day (once it is less than 30)

import urllib.request, urllib.parse, urllib.error
from bs4 import BeautifulSoup
import ssl
from datetime import datetime

# Ignore SSL certificate errors
ctx = ssl.create_default_context()
ctx.check_hostname = False
ctx.verify_mode = ssl.CERT_NONE



# URL 1
#url1 = 'https://howmanydaysuntil.center/mlb-opening-day/'
#html1 = urllib.request.urlopen(url1, context=ctx).read()
#soup1 = BeautifulSoup(html1, 'html.parser')
#
#dayhour = soup1.find('span', class_='dhcountdown').text
#dayhour = dayhour.split()
#days = int(dayhour[0])
#hours = int(dayhour[2])
#if hours > 0:
#    days = days + 1
#print(days,'days until MLB opening day')



# URL 2
host2 = 'https://www.baseball-reference.com/boxes/?'
year = datetime.today().year
month = datetime.today().month
day = datetime.today().day

url2 = host2 + f'month={month}&day={day}&year={year}'
try:
    html2 = urllib.request.urlopen(url2, context=ctx)
except:
    url2 = host2 + f'month=10&day=30&year=2019'
    html2 = urllib.request.urlopen(url2, context=ctx)

#for line in html2:
#    print(line.decode().strip())

soup2 = BeautifulSoup(html2.read(), 'html.parser')
for standings in  soup2.find('div', class_='table_wrapper'):
    division = standings.find(class_='section_heading')
    print(division)
#    division = standings.find('div', class_='section_heading').h2.text
#    print(division)

#leagueName = soup2.find('span', class_='section_anchor').text
#print('Division:',leagueName)
#print(teamName)
#print(soup2.prettify())
